
/*
[M1S03] Ex 4 - Realize a instalação do GitBash e GitHub Desktop em seu computador
Além de instalar, realize as configurações do git em sua máquina conforme as instruções vista na aula 4 da semana 3.
 */

//Descrevendo todos os passos necessários para instalação do GitBash e GitHub Desktop no seu computador:

***GIT, GITHUB E GITFLOW

// 1.Instalar na máquina (GitHub e GitHub Desktop

	// 1.1 Abrir o GitBach ou terminal e rodar comandos

		// 1.1.1 git
		// 1.1.2 git --version
		// 1.1.3 git config --global user.name "Seu nome"(Marcel)
		// 1.1.4 git config --global user.email "Seu email de sua conta do GitHub"
		// 1.1.5 git config --list//conferir para ver se aparece o seu nome e email



// 2.Visualizar os arquivos ocultos

	// 2.1Configurar no Windows > Abrir: Opções do Explorador de Arquivos > Modo de Exibição > Desabilitar:
 	Ocular extensões dos tipos de arquivos conhecidos

// 3. Configurar o SSH para o GitHub




// 4.


PRIMEIRA ETAPA

// 1.Instalar na máquina (GitHub e GitHub Desktop

// 2 Abrir o GitBach ou terminal e rodar comandos

// 3. Digite o camando git: Para verificar se o git está instalado na máquina 

// 4. Abra o terminal. Para ver a versão do Git digite o seguinte comando: git --version

// 5. Vamos fazer a primeira configuração: O git local da minha para conversar com o GitHub servidor Web

// 6. Vamos fazer a primeira configuração: O git local da minha para conversar com o git servidor Web

// 7. Digitar outro comando: git config --global user.name "Marcel Campos" (configuramos o nome)

// 8. O comando para configurar o email: git config --global user.email "marcel_campos@estudante.sesisenai.org.br"

// 9. Agora para validar para ver se está certo: git config --list (Para conferir para ver se aparece o seu nome e email)



SEGUNDA ETAPA

// 1.Fazer uma configuração direto no windows

// 2.Habilitar o Windows para que ele mostre os arquivos ocultos na nossa máquina

// 3. Mac : Caminho > Finder > abra a pasta Macintosh HD > Pressione Command + Shift

// 4. Windows: No explorador de arquivos > opções > abre uma janela de configuração das pastas do Desktop > clicar na aba modo exibição

// 5.  Desabilitar a opção: Ocultar as extensões dos tipos de arquivos conhecidos > clicar em aplicar

// 6. Fazer mais uma configuração, contextualizando: O GitHub tem algumas regras de segurança para que possamos enviar códigos do nosso 
computador ,eu preciso autorizar que o meu computador tenha a permissão de enviar arquivos, códigos lá para GitHub

// 7. Para isso precisamos configurar o nosso protocolo de comunicação de dados com segurança chato SSH, que é basicamente uma maneira de 
o GitHub limitar, saber , permitir que o meus computador possa mandar códigos lá para o Git Hub

// 8. Nesse momento o que precisamos saber que existe esse código de comunicação SSH, que a configuramos no computador ou nos computadores
Para que tenha permissão no meu nome, na minha máquina. Na minha conta; para que meu computador possa enviar códigos

//9. Então precisaremos gerar uma chave SSH no nosso computador e depois acessar o GitHub na WEB e vai cadastrar essa chave la no GitHub da WEB

//10. Para GitHub SSH: https://docs.github.com/en/authentication/connecting-to-github-with-ssh

//11. Vamos clicar na Generating a new SSH key and adding it to the ssh-agent

//12. Após clicando nos leva para o passo a passo: tem 3 plataformas (Mac - Windows - Linux)

//13. Clica em windows, vemos fazer o que pede:

	// 13.1 Open Git Bash.

	// 13.2 Cole o texto abaixo, substituindo em seu endereço de e-mail do GitHub.

	// 13.3 $ ssh-keygen -t ed25519 -C "your_email@example.com"

	// 13.4 E dar enter lá no nosso GitBash

	// 13.5 $ ssh-keygen -t ed25519 -C "marcel_campos@estudante.sesisenai.org.br"

	// 13.6  Solicita uma senha: Pode dar enter

	// 13.7 Acessar: /Users/marcel/.ssh/id_ed25519.

	// 13. Arquivo id_ed25519.pub -> Abrir com bloco de notas

	// 14. Copia arquivo: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKYYrajEISzjtnWkzIsNcvO3Aic9A/3IY0mUtTdRYx3Y marcel_campos@estudante.sesisenai.org.br

	// 15. Abre o GitHub vai em configurações 

	// 16. A lado esquerdo tem uma aba chamada: SSH and GPG keys

	// 16. Ao lado direito em um botão verde Clica em "New SSH key

	// 17. Dá um Nome e cola o conteúdo -> Arquivo id_ed25519.pub -> Aberto com Bloco de Notas com bloco de notas

	// 17. Apartir desse momento o nosso computador está se comunicando com a nossa conta do GitHub

[M1S03] Ex 5 - Utilizando o GitBash/Terminal crei um projeto básico no IntelliJ e envie para sua conta no GitHub usando os comandos do Git

AGORA FAREMOS O NOSSO PRIMEIRO PROJETO IREMOS ENVIAR O NOSSO PRIMEIRO PROJETO PARA O GITHUB

	// 1. Vamos criar um projeto no IntelliJ IDEA e enviaremos para o GitHub esse projeto

	// 2. Vamos Abrir o IntelliJ IDEA

	// 2. Iniciar um nono projeto
	
	// 4. Nome: MeuPrimeiro Repositório




		
			video aula 3 gravação 4 hora 2:24:54s




 



